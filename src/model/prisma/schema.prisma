generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  enabled   Boolean  @default(true)
  image_url String   @default("")
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Store     Store[]

  @@map("users")
}

model Store {
  id         String       @id @default(uuid())
  name       String
  image_url  String       @default("")
  enabled    Boolean      @default(true)
  user_id    String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @default(now())
  User       Users        @relation(fields: [user_id], references: [id])
  Products   Products[]
  Categories Categories[]

  @@map("stores")
}

model Products {
  id          String     @id @default(uuid())
  name        String
  price       Float
  description String
  quantity    Int
  image_url   String     @default("")
  enabled     Boolean    @default(true)
  store_id    String
  category_id String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now())
  Store       Store      @relation(fields: [store_id], references: [id])
  Category    Categories @relation(fields: [category_id], references: [id])

  @@map("products")
}

model Categories {
  id         String     @id @default(uuid())
  name       String
  image_url  String     @default("")
  product_id String?
  store_id   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())
  Product    Products[]
  Store      Store      @relation(fields: [store_id], references: [id])

  @@map("categories")
}

model Charts {
  id        String   @id @default(uuid())
  label     String
  data      Float
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("charts")
}

enum Role {
  ADMIN
  USER
}
