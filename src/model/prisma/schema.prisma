generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id               String             @id @default(uuid())
  email            String             @unique
  name             String
  password         String
  enabled          Boolean            @default(true)
  image_url        String             @default("")
  role             Role               @default(USER)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now())
  StoreAndProducts StoreAndProducts[]

  @@map("users")
}

model Store {
  id               String             @id @default(uuid())
  name             String
  image_url        String             @default("")
  enabled          Boolean            @default(true)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now())
  StoreAndProducts StoreAndProducts[]

  @@map("stores")
}

model Products {
  id               String             @id @default(uuid())
  name             String
  price            Float
  enabled          Boolean            @default(true)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now())
  StoreAndProducts StoreAndProducts[]

  @@map("products")
}

model StoreAndProducts {
  id         String   @id @default(uuid())
  user_id    String
  store_id   String
  product_id String
  Users      Users    @relation(fields: [user_id], references: [id])
  Store      Store    @relation(fields: [store_id], references: [id])
  Product    Products @relation(fields: [product_id], references: [id])
  quantity   Int
  total      Float
  enabled    Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())

  @@map("store_and_products")
}

model Charts {
  id        String   @id @default(uuid())
  label     String
  data      Float
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("charts")
}

enum Role {
  ADMIN
  USER
}
